Search.setIndex({"docnames": ["codergpt", "codergpt.commenter", "codergpt.documenter", "codergpt.explainer", "codergpt.optimizer", "codergpt.test_writer", "codergpt.utils", "description", "developer", "index", "modules"], "filenames": ["codergpt.rst", "codergpt.commenter.rst", "codergpt.documenter.rst", "codergpt.explainer.rst", "codergpt.optimizer.rst", "codergpt.test_writer.rst", "codergpt.utils.rst", "description.rst", "developer.rst", "index.rst", "modules.rst"], "titles": ["codergpt package", "codergpt.commenter package", "codergpt.documenter package", "codergpt.explainer package", "codergpt.optimizer package", "codergpt.test_writer package", "codergpt.utils package", "CoderGPT", "Developer Documentation", "Welcome to CoderGPT\u2019s documentation!", "codergpt"], "terms": {"comment": [0, 7, 8, 10], "codecomment": [0, 1, 8, 10], "document": [0, 7, 10], "explain": [0, 1, 4, 7, 8, 10], "codeexplain": [0, 3, 8, 10], "optim": [0, 7, 8, 10], "codeoptim": [0, 4, 8, 10], "test_writ": [0, 10], "tester": [0, 10], "util": [0, 8, 10], "expression_evalu": [0, 10], "expressionevalu": [0, 6], "visit_classdef": [0, 6], "visit_functiondef": [0, 6], "all": 0, "us": [0, 6, 7, 8], "python": [0, 7, 9], "file": [0, 1, 3, 4, 7, 9], "class": [0, 1, 3, 4, 6, 7, 9], "model": [0, 8], "gpt": [0, 7], "3": 0, "5": 0, "turbo": 0, "base": [0, 1, 3, 4, 6], "object": [0, 1, 3, 4], "path": [0, 3, 4, 7, 8], "overwrit": [0, 1, 4, 7, 8], "fals": [0, 1, 4], "add": [0, 7, 8], "code": [0, 1, 3, 4, 6, 7, 8], "paramet": [0, 1, 3, 4, 6, 7, 8], "union": [0, 8], "str": [0, 1, 3, 4], "The": [0, 1, 3, 4, 6, 7, 8], "bool": [0, 1], "whether": [0, 1], "exist": [0, 7], "default": [0, 1, 3, 4], "i": [0, 1, 3, 4, 8, 9], "function": [0, 3, 4, 6, 7, 8], "none": [0, 1, 3, 4, 6], "classnam": [0, 3, 4, 7, 8], "option": [0, 3, 4, 9], "name": [0, 3, 4, 6, 7], "get_cod": [0, 10], "filenam": [0, 1, 4], "function_nam": [0, 6, 7], "class_nam": [0, 6, 7], "extract": [0, 1, 3, 4, 6], "return": [0, 7], "sourc": [0, 6], "specifi": [0, 6], "from": [0, 1, 3, 4, 7, 8], "contain": [0, 1, 8], "type": [0, 7, 8], "found": 0, "inspect_packag": [0, 8, 10], "inspect": [0, 7, 8], "displai": [0, 7], "map": [0, 7, 8], "languag": [0, 1, 3, 7, 8], "tabl": 0, "directori": 0, "test": [0, 5, 7, 8], "chain": [0, 1, 3, 4], "given": [0, 1, 3, 4, 7], "string": [0, 1], "invok": [0, 1, 3, 4], "runnabl": [0, 1, 3, 4], "write": [0, 1, 5], "new": [0, 1, 7], "origin": [0, 1], "A": [0, 1, 7], "boolean": [0, 1], "indic": [0, 1], "explan": [3, 7, 8], "evalu": 6, "express": 6, "source_cod": 6, "nodevisitor": 6, "node": 6, "visit": 6, "classdef": 6, "definit": 6, "ast": 6, "If": 6, "match": 6, "target": 6, "segment": 6, "repres": 6, "functiondef": 6, "project": [6, 7, 8], "gener": [7, 8], "modifi": 7, "It": [7, 8], "allow": 7, "enhanc": 7, "ad": [7, 8], "power": [7, 8], "llm": 7, "thi": [7, 8], "langchain": 7, "To": [7, 8], "clone": 7, "repositori": 7, "requir": [7, 8], "depend": [7, 9], "pip": 7, "most": 7, "recent": 7, "data": 7, "can": 7, "directli": 7, "github": 7, "git": 7, "http": 7, "com": 7, "hrshdhgd": 7, "mode": [7, 8], "poetri": 7, "follow": [7, 8], "cd": 7, "run": [7, 8], "syntax": 7, "arg": [7, 8], "v": [7, 8], "verbos": [7, 8], "integ": [7, 8], "set": 7, "level": [7, 8], "0": [7, 8], "1": [7, 8], "2": [7, 8], "q": [7, 8], "quiet": [7, 8], "enabl": 7, "version": [7, 8], "inform": 7, "packag": [7, 8, 9, 10], "exampl": [7, 9], "src": [7, 8], "constant": [7, 8, 10], "py": [7, 8], "__init__": 7, "specif": 7, "within": [7, 8], "defin": 7, "method": [7, 8], "call": [7, 8], "take": 7, "three": 7, "user": [7, 8], "ha": 7, "choic": 7, "creat": 7, "one": 7, "let": 7, "": 7, "consid": 7, "greet": 7, "def": 7, "f": 7, "hello": 7, "__name__": [7, 8], "__main__": [7, 8], "user_nam": 7, "alic": 7, "print": 7, "result": 7, "messag": 7, "calculate_sum": 7, "number": 7, "mathoper": 7, "multipli": 7, "self": 7, "b": 7, "answer": 7, "rang": 7, "import": 7, "list": 7, "int": 7, "calcul": 7, "sum": 7, "two": 7, "first": 7, "second": 7, "In": 7, "we": 7, "built": [7, 8], "more": 7, "effici": 7, "than": 7, "manual": 7, "iter": 7, "over": 7, "each": 7, "oper": [7, 8], "elimin": 7, "need": 7, "loop": 7, "improv": 7, "perform": [7, 8], "By": 7, "readabl": 7, "click": [7, 8], "librari": [7, 8], "below": 7, "an": [7, 8], "how": 7, "coder": [7, 8], "argument": [7, 8], "true": 7, "new_command": 7, "logic": 7, "here": 7, "pass": 7, "section": 8, "who": 8, "want": 8, "contribut": 8, "extend": 8, "modul": [8, 9, 10], "provid": 8, "cli": [8, 9, 10], "tool": 8, "facilit": 8, "variou": 8, "desir": 8, "codergpt_cli": 8, "show": 8, "exit": 8, "content": [8, 10], "friendli": 8, "wai": 8, "interact": 8, "termin": 8, "my_funct": 8, "myclass": 8, "openai_api_kei": 8, "api": 8, "kei": 8, "openai": 8, "servic": 8, "log": 8, "pathlib": 8, "textio": 8, "__version__": 8, "suit": 8, "includ": 8, "task": 8, "o": 8, "yaml": 8, "langchain_cor": 8, "prompt": 8, "chatprompttempl": 8, "langchain_openai": 8, "chatopenai": 8, "tabul": 8, "extension_map_fil": 8, "gpt_3_5_turbo": 8, "inspection_head": 8, "initi": 8, "Then": 8, "its": 8, "appropri": 8, "extens": 8, "program": 8, "what": 9, "instal": 9, "command": 9, "line": 9, "interfac": 9, "develop": 9, "overview": 9, "usag": 9, "detail": 9, "environ": 9, "variabl": 9, "main": [9, 10], "descript": 9, "index": 9, "search": 9, "page": 9, "subpackag": 10, "submodul": 10}, "objects": {"": [[0, 0, 0, "-", "codergpt"]], "codergpt": [[0, 1, 1, "", "CodeCommenter"], [0, 1, 1, "", "CodeExplainer"], [0, 1, 1, "", "CodeOptimizer"], [0, 1, 1, "", "CoderGPT"], [1, 0, 0, "-", "commenter"], [0, 0, 0, "-", "constants"], [2, 0, 0, "-", "documenter"], [3, 0, 0, "-", "explainer"], [0, 0, 0, "-", "main"], [4, 0, 0, "-", "optimizer"], [5, 0, 0, "-", "test_writer"], [6, 0, 0, "-", "utils"]], "codergpt.CodeCommenter": [[0, 2, 1, "", "comment"]], "codergpt.CodeExplainer": [[0, 2, 1, "", "explain"]], "codergpt.CodeOptimizer": [[0, 2, 1, "", "optimize"]], "codergpt.CoderGPT": [[0, 2, 1, "", "commenter"], [0, 2, 1, "", "explainer"], [0, 2, 1, "", "get_code"], [0, 2, 1, "", "inspect_package"], [0, 2, 1, "", "optimizer"], [0, 2, 1, "", "tester"]], "codergpt.commenter": [[1, 1, 1, "", "CodeCommenter"], [1, 0, 0, "-", "commenter"]], "codergpt.commenter.CodeCommenter": [[1, 2, 1, "", "comment"]], "codergpt.commenter.commenter": [[1, 1, 1, "", "CodeCommenter"]], "codergpt.commenter.commenter.CodeCommenter": [[1, 2, 1, "", "comment"]], "codergpt.documenter": [[2, 0, 0, "-", "documenter"]], "codergpt.explainer": [[3, 1, 1, "", "CodeExplainer"], [3, 0, 0, "-", "explainer"]], "codergpt.explainer.CodeExplainer": [[3, 2, 1, "", "explain"]], "codergpt.explainer.explainer": [[3, 1, 1, "", "CodeExplainer"]], "codergpt.explainer.explainer.CodeExplainer": [[3, 2, 1, "", "explain"]], "codergpt.main": [[0, 1, 1, "", "CoderGPT"]], "codergpt.main.CoderGPT": [[0, 2, 1, "", "commenter"], [0, 2, 1, "", "explainer"], [0, 2, 1, "", "get_code"], [0, 2, 1, "", "inspect_package"], [0, 2, 1, "", "optimizer"], [0, 2, 1, "", "tester"]], "codergpt.optimizer": [[4, 1, 1, "", "CodeOptimizer"], [4, 0, 0, "-", "optimizer"]], "codergpt.optimizer.CodeOptimizer": [[4, 2, 1, "", "optimize"]], "codergpt.optimizer.optimizer": [[4, 1, 1, "", "CodeOptimizer"]], "codergpt.optimizer.optimizer.CodeOptimizer": [[4, 2, 1, "", "optimize"]], "codergpt.test_writer": [[5, 0, 0, "-", "tester"]], "codergpt.utils": [[6, 0, 0, "-", "expression_evaluator"]], "codergpt.utils.expression_evaluator": [[6, 1, 1, "", "ExpressionEvaluator"]], "codergpt.utils.expression_evaluator.ExpressionEvaluator": [[6, 2, 1, "", "visit_ClassDef"], [6, 2, 1, "", "visit_FunctionDef"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"codergpt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "packag": [0, 1, 2, 3, 4, 5, 6], "subpackag": 0, "submodul": [0, 1, 2, 3, 4, 5, 6], "cli": [0, 7], "modul": [0, 1, 2, 3, 4, 5, 6], "constant": 0, "main": [0, 8], "content": [0, 1, 2, 3, 4, 5, 6], "comment": 1, "document": [2, 8, 9], "explain": 3, "optim": 4, "test_writ": 5, "tester": 5, "util": 6, "expression_evalu": 6, "what": 7, "i": 7, "instal": 7, "command": [7, 8], "line": [7, 8], "interfac": [7, 8], "option": [7, 8], "develop": [7, 8], "overview": 8, "usag": 8, "detail": 8, "exampl": 8, "environ": 8, "variabl": 8, "depend": 8, "python": 8, "file": 8, "class": 8, "descript": 8, "welcom": 9, "": 9, "get": 9, "start": 9, "indic": 9, "tabl": 9}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"codergpt package": [[0, "codergpt-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"]], "codergpt.cli module": [[0, "codergpt-cli-module"]], "codergpt.constants module": [[0, "module-codergpt.constants"]], "codergpt.main module": [[0, "module-codergpt.main"]], "Module contents": [[0, "module-codergpt"], [1, "module-codergpt.commenter"], [2, "module-codergpt.documenter"], [3, "module-codergpt.explainer"], [4, "module-codergpt.optimizer"], [5, "module-codergpt.test_writer"], [6, "module-codergpt.utils"]], "codergpt.commenter package": [[1, "codergpt-commenter-package"]], "codergpt.commenter.commenter module": [[1, "module-codergpt.commenter.commenter"]], "codergpt.documenter package": [[2, "codergpt-documenter-package"]], "codergpt.documenter.documenter module": [[2, "module-codergpt.documenter.documenter"]], "codergpt.explainer package": [[3, "codergpt-explainer-package"]], "codergpt.explainer.explainer module": [[3, "module-codergpt.explainer.explainer"]], "codergpt.optimizer package": [[4, "codergpt-optimizer-package"]], "codergpt.optimizer.optimizer module": [[4, "module-codergpt.optimizer.optimizer"]], "codergpt.test_writer package": [[5, "codergpt-test-writer-package"]], "codergpt.test_writer.tester module": [[5, "module-codergpt.test_writer.tester"]], "codergpt.utils package": [[6, "codergpt-utils-package"]], "codergpt.utils.expression_evaluator module": [[6, "module-codergpt.utils.expression_evaluator"]], "CoderGPT": [[7, "codergpt"]], "What is it?": [[7, "what-is-it"]], "Installation": [[7, "installation"]], "Command Line Interface (CLI)": [[7, "command-line-interface-cli"]], "Options": [[7, "options"], [8, "options"]], "Commands": [[7, "commands"], [8, "commands"]], "Development": [[7, "development"]], "Developer Documentation": [[8, "developer-documentation"]], "Command Line Interface for CoderGPT": [[8, "command-line-interface-for-codergpt"]], "Overview": [[8, "overview"]], "Usage": [[8, "usage"], [8, "id2"]], "Details": [[8, "details"]], "Examples": [[8, "examples"]], "Environment Variables": [[8, "environment-variables"], [8, "id3"]], "Dependencies": [[8, "dependencies"], [8, "id1"]], "Main Python File": [[8, "main-python-file"]], "Classes": [[8, "classes"]], "Description": [[8, "description"]], "Files": [[8, "files"]], "Welcome to CoderGPT\u2019s documentation!": [[9, "welcome-to-codergpt-s-documentation"]], "Getting Started": [[9, null]], "Indices and tables": [[9, "indices-and-tables"]], "codergpt": [[10, "codergpt"]]}, "indexentries": {"codecommenter (class in codergpt)": [[0, "codergpt.CodeCommenter"]], "codeexplainer (class in codergpt)": [[0, "codergpt.CodeExplainer"]], "codeoptimizer (class in codergpt)": [[0, "codergpt.CodeOptimizer"]], "codergpt (class in codergpt)": [[0, "codergpt.CoderGPT"]], "codergpt (class in codergpt.main)": [[0, "codergpt.main.CoderGPT"]], "codergpt": [[0, "module-codergpt"]], "codergpt.constants": [[0, "module-codergpt.constants"]], "codergpt.main": [[0, "module-codergpt.main"]], "comment() (codergpt.codecommenter method)": [[0, "codergpt.CodeCommenter.comment"]], "commenter() (codergpt.codergpt method)": [[0, "codergpt.CoderGPT.commenter"]], "commenter() (codergpt.main.codergpt method)": [[0, "codergpt.main.CoderGPT.commenter"]], "explain() (codergpt.codeexplainer method)": [[0, "codergpt.CodeExplainer.explain"]], "explainer() (codergpt.codergpt method)": [[0, "codergpt.CoderGPT.explainer"]], "explainer() (codergpt.main.codergpt method)": [[0, "codergpt.main.CoderGPT.explainer"]], "get_code() (codergpt.codergpt method)": [[0, "codergpt.CoderGPT.get_code"]], "get_code() (codergpt.main.codergpt method)": [[0, "codergpt.main.CoderGPT.get_code"]], "inspect_package() (codergpt.codergpt method)": [[0, "codergpt.CoderGPT.inspect_package"]], "inspect_package() (codergpt.main.codergpt method)": [[0, "codergpt.main.CoderGPT.inspect_package"]], "module": [[0, "module-codergpt"], [0, "module-codergpt.constants"], [0, "module-codergpt.main"], [1, "module-codergpt.commenter"], [1, "module-codergpt.commenter.commenter"], [2, "module-codergpt.documenter"], [2, "module-codergpt.documenter.documenter"], [3, "module-codergpt.explainer"], [3, "module-codergpt.explainer.explainer"], [4, "module-codergpt.optimizer"], [4, "module-codergpt.optimizer.optimizer"], [5, "module-codergpt.test_writer"], [5, "module-codergpt.test_writer.tester"], [6, "module-codergpt.utils"], [6, "module-codergpt.utils.expression_evaluator"]], "optimize() (codergpt.codeoptimizer method)": [[0, "codergpt.CodeOptimizer.optimize"]], "optimizer() (codergpt.codergpt method)": [[0, "codergpt.CoderGPT.optimizer"]], "optimizer() (codergpt.main.codergpt method)": [[0, "codergpt.main.CoderGPT.optimizer"]], "tester() (codergpt.codergpt method)": [[0, "codergpt.CoderGPT.tester"]], "tester() (codergpt.main.codergpt method)": [[0, "codergpt.main.CoderGPT.tester"]], "codecommenter (class in codergpt.commenter)": [[1, "codergpt.commenter.CodeCommenter"]], "codecommenter (class in codergpt.commenter.commenter)": [[1, "codergpt.commenter.commenter.CodeCommenter"]], "codergpt.commenter": [[1, "module-codergpt.commenter"]], "codergpt.commenter.commenter": [[1, "module-codergpt.commenter.commenter"]], "comment() (codergpt.commenter.codecommenter method)": [[1, "codergpt.commenter.CodeCommenter.comment"]], "comment() (codergpt.commenter.commenter.codecommenter method)": [[1, "codergpt.commenter.commenter.CodeCommenter.comment"]], "codergpt.documenter": [[2, "module-codergpt.documenter"]], "codergpt.documenter.documenter": [[2, "module-codergpt.documenter.documenter"]], "codeexplainer (class in codergpt.explainer)": [[3, "codergpt.explainer.CodeExplainer"]], "codeexplainer (class in codergpt.explainer.explainer)": [[3, "codergpt.explainer.explainer.CodeExplainer"]], "codergpt.explainer": [[3, "module-codergpt.explainer"]], "codergpt.explainer.explainer": [[3, "module-codergpt.explainer.explainer"]], "explain() (codergpt.explainer.codeexplainer method)": [[3, "codergpt.explainer.CodeExplainer.explain"]], "explain() (codergpt.explainer.explainer.codeexplainer method)": [[3, "codergpt.explainer.explainer.CodeExplainer.explain"]], "codeoptimizer (class in codergpt.optimizer)": [[4, "codergpt.optimizer.CodeOptimizer"]], "codeoptimizer (class in codergpt.optimizer.optimizer)": [[4, "codergpt.optimizer.optimizer.CodeOptimizer"]], "codergpt.optimizer": [[4, "module-codergpt.optimizer"]], "codergpt.optimizer.optimizer": [[4, "module-codergpt.optimizer.optimizer"]], "optimize() (codergpt.optimizer.codeoptimizer method)": [[4, "codergpt.optimizer.CodeOptimizer.optimize"]], "optimize() (codergpt.optimizer.optimizer.codeoptimizer method)": [[4, "codergpt.optimizer.optimizer.CodeOptimizer.optimize"]], "codergpt.test_writer": [[5, "module-codergpt.test_writer"]], "codergpt.test_writer.tester": [[5, "module-codergpt.test_writer.tester"]], "expressionevaluator (class in codergpt.utils.expression_evaluator)": [[6, "codergpt.utils.expression_evaluator.ExpressionEvaluator"]], "codergpt.utils": [[6, "module-codergpt.utils"]], "codergpt.utils.expression_evaluator": [[6, "module-codergpt.utils.expression_evaluator"]], "visit_classdef() (codergpt.utils.expression_evaluator.expressionevaluator method)": [[6, "codergpt.utils.expression_evaluator.ExpressionEvaluator.visit_ClassDef"]], "visit_functiondef() (codergpt.utils.expression_evaluator.expressionevaluator method)": [[6, "codergpt.utils.expression_evaluator.ExpressionEvaluator.visit_FunctionDef"]]}})